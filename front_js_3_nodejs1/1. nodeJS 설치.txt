Node.JS란 무엇인가?
    Node.js는 npm을 이용하여 내 앱에 필요한 모듈을 추가하여, 자바스크립트 실행 환경을 변경해주는 툴이다.
        npm이란? node package manager의 약자로 다음과 같은 명령어가 있다.
            npm i <패키지명> : 패키지 설치
            npm uninstall <패키지명> : 패키지 삭제
            npm update <패키지명> : 패키지 업데이트
            npm start : package.json 스크립트 안에서 "start" 안에 있는 것을 실행
            npm run dev : package.json 스크립트 안에서 "dev" 안에 있는 것을 실행
                node package란?
                    노드에서 호출할 수 있는 라이브러리나 프레임워크 등을 총칭한다고 보면 된다.

    npm을 이용하여 하는 일 중 대표적인 것은, HTML, CSS, JS로 만든 정적 웹앱에서 서버를 구성하는 동적 웹앱으로 변경을 할 수 있을 것이다.
    하지만 Node.js 그 자체를 백엔드 자체만의 기술, 웹 서버 자체만으로 받아들여서는 안된다.
    우리는 서버 뿐 아니라 일렉트론.js 같은 프레임워크를 통해서, 데스크톱 앱을 제작하기 위한 자바스크립트 개발 환경을 구축할 수도 있다.
    즉, Node.js는 "목적에 맞게 자바스크립트의 개발 환경을 구축할 수 있는 언어"인 것이다.

    노파심에 다시 한번 예로 들자면, Node를 설치해서,
    Express 프레임워크를 설치해 서버를 구축한다던지,
    ReactJS(클라이언트)-NextJS(서버) 프레임워크들을 설치해 리액트JS 개발 환경을 구축한다던지,
    VueJS(클라이언트)-NuxtJS(서버) 프레임워크들을 설치해 뷰JS 개발 환경을 구축한다던지,
    Electron 프레임워크를 설치해 JS로 데스크톱 전용 앱 개발 환경을 구축한다던지,
    또는 각종 라이브러리, 예를 들면,
    mysql, lodash, gojs, chalk ... 등 수많은 라이브러리들,
    그들 중에 프로젝트에 필요한 JS 라이브러리를 채용하여 사용할 수 있다. (상업용 앱일 경우 라이센스 구매가 필요할 수 있다.)

설치방법
    1. nodejs.org/ko/ 에서 os에 맞는 버전을 다운로드
    2. 설치확인 : 터미널에서 node -v, npm -v 로 버전확인. (npm은 node를 설치하면 자동으로 같이 설치됨)
    3. Node로 js파일 실행하기 : 1.js를 만든뒤, 터미널에서 node 1.js를 실행해본다.